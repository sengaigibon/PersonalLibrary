{% extends 'base.html.twig' %}

{% block title %}Book index{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        function updateStatus(bookId, buttonElement, status) {
            const dataPath = buttonElement.getAttribute('data-path');
            let text, statusMessage;
            switch (status) {
                case 'reading':
                    text = 'üìñ Reading now...';
                    statusMessage = 'üìñ Reading';
                    break;
                case 'finished':
                    text = statusMessage = '‚úÖ Finished';
                    break;
            }

            fetch(dataPath, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
                .then(response => {
                    return response.json().then(data => ({
                        status: response.status,
                        data: data
                    }));
                })
                .then(function(result) {
                    if (result.status === 200 && result.data.success) {
                        buttonElement.textContent = text;
                        buttonElement.style.backgroundColor = '#95a5a6';
                        buttonElement.style.cursor = 'not-allowed';
                        buttonElement.style.pointerEvents = 'none';
                        buttonElement.onclick = null;

                        const row = document.getElementById('tr-book-' + bookId);
                        if (row) {
                            const statusCell = row.querySelector('.read-status');
                            if (statusCell) {
                                statusCell.innerHTML = `<span class="status-${status}">${statusMessage}</span>`;
                            }
                        }
                    } else if (result.status === 400 && result.data.error) {
                        alert('Error: ' + result.data.error);
                    } else {
                        alert('Unexpected response from server');
                    }
                })
                .catch(error => {
                    console.error('Error making request:', error);
                    alert('Network error occurred');
                });
        }
    </script>
{% endblock %}

{% block body %}
<div class="books-container">
    <div class="books-header">
        <h1>üìö Library</h1>
        <a href="{{ path('app_book_new', {page: pagination.current_page|default(1), limit: pagination.items_per_page|default(20)}) }}" class="btn-base btn-new">+ Add New Book</a>
    </div>

    <!-- Search Section -->
    <div class="search-container">
        <form method="GET" action="{{ path('app_dashboard_books') }}" class="search-form">
            <div class="search-fields">
                <div class="search-field">
                    <label for="title">Search by Title:</label>
                    <input type="text" id="title" name="title" value="{{ search.title|default('') }}" placeholder="Enter book title..." class="form-control-search">
                </div>
                <div class="search-field">
                    <label for="author">Search by Author:</label>
                    <input type="text" id="author" name="author" value="{{ search.author|default('') }}" placeholder="Enter author name..." class="form-control-search">
                </div>
            </div>
            <div class="search-actions">
                <button type="submit" class="btn-base btn-search">üîç Search</button>
                <a href="{{ path('app_dashboard_books') }}" class="btn-base btn-clear">üóëÔ∏è Clear</a>
            </div>
            <!-- Hidden fields to preserve pagination settings -->
            <input type="hidden" name="limit" value="{{ pagination.items_per_page|default(20) }}">
        </form>
    </div>

    <table class="table modern-table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Title</th>
                <th>Author</th>
                <th>Pages</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
        {% for book in books %}
            {% if book is not null and book is not empty %}
            <tr id="tr-book-{{ book.id }}">
                <td>{{ book.id }}</td>
                <td class="book-title">{{ book.title ?? '' }}</td>
                <td class="book-author">{{ book.author ?? '' }}</td>
                <td class="pages">{{ book.pages ?? '?' }}</td>
                <td class="read-status">
                    {% set hasFinishedReading = false %}
                    {% set isCurrentlyReading = false %}

                    {% for readLog in book.readLogs %}
                        {% if readLog.startDate is not empty and readLog.finishDate is empty %}
                            {% set isCurrentlyReading = true %}
                        {% elseif readLog.finishDate is not empty %}
                            {% set hasFinishedReading = true %}
                        {% endif %}
                    {% endfor %}

                    {% if isCurrentlyReading %}
                        <span class="status-reading">üìñ Reading</span>
                    {% elseif hasFinishedReading %}
                        <span class="status-finished">‚úÖ Finished</span>
                    {% else %}
                        <span class="status-unread">üìö Unread</span>
                    {% endif %}
                </td>
                <td>
                    {% if book.id is not null %}
                    <a href="{{ path('app_book_show', {'id': book.id}) }}" class="action-btn btn-show">üëÅ Show</a>
                    <a href="{{ path('app_book_edit', {'id': book.id, page: pagination.current_page|default(1), limit: pagination.items_per_page|default(20)}) }}" class="action-btn btn-edit">‚úèÔ∏è Edit</a>
                    <a href="#" class="action-btn btn-log">üìù Log</a>

                    {% if isCurrentlyReading %}
                        <a href="#" class="action-btn btn-finish-reading" data-path="{{ path('app_book_finish', {'id': book.id}) }}" onclick="updateStatus({{ book.id }}, this, 'finished'); return false;">‚úÖ Finish</a>
                    {% else %}
                        <a href="#" class="action-btn btn-start-reading" data-path="{{ path('app_book_start', {'id': book.id}) }}" onclick="updateStatus({{ book.id }}, this, 'reading'); return false;">üìñ Start</a>
                    {% endif %}

                    {% endif %}
                </td>
            </tr>
            {% endif %}
        {% else %}
            <tr>
                <td colspan="6" class="no-records">üìñ No books found.</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>

    <!-- Pagination Controls -->
    {{ include('components/pagination.html.twig', {
        'route_name': 'app_dashboard_books',
        'route_params': {},
        'item_name': 'books'
    }) }}
</div>
{% endblock %}
